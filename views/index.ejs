<nav class="navbar navbar-inverse navbar-fixed-top">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="#">&#60;%= scriptBook %&#62;</a>
        </div>
        <div id="navbar" class="collapse navbar-collapse">
            <ul class="nav navbar-nav">
                <li class="active"><a href="/">Home</a></li>
                <li><a href="/user">Settings</a></li>
                <li><a href="/search">Search</a></li>
            </ul>
        </div><!--/.nav-collapse -->
    </div>
</nav>

<div class="content-container">
    <p> Welcome to scriptBook! user : <span class="user_displayname"><%= displayname %></span> <a href="/logout">logout</a></p>
    
    <div id="wall">

<form>
            <input name="post_type" id="wall_radio_say" value="say" type="radio" checked>Say
            <input name="post_type" id="wall_radio_quick_canvas" value="quick" type="radio">Quick Canvas
        </form>
        <div id="say_container">

            <label>Say:</label>
            <input id="say_input" type="text" name="say">
            <input id="say_post" type="submit" value="post">

        </div>

        <div id="quick_container">
            <textarea id="quick_input">

(function(){

    // basic Quick Canvas Template

    var canvas = document.getElementById('quick_canvas'),
    context = canvas.getContext('2d'),

	// a box
    box = {
        x: 155,
        y: 115,
        w: 10,
        h: 10
    },
	
	// app state object
    state = {

        frame:0,
        maxFrame: 60

    },

	// start will be called once before running main loop
    start = function(){

        loop();

    },

	// what to do on each frame tick
    update = function(){

        box.x = state.frame * ((canvas.width-20) / state.maxFrame) + 10;

        state.frame++;

        if(state.frame === state.maxFrame){
            state.frame = 0;
        }

    },

	// what to draw to canvas
    draw = function(ctx){

        // background
        ctx.fillStyle='#000000';
        ctx.fillRect(0,0,canvas.width,canvas.height);

        // box
        ctx.fillStyle='#ffffff';
        ctx.fillRect(box.x,box.y,box.w,box.h);

    },

	// main app loop
    loop = function(){

        requestAnimationFrame(loop);

        update();
        draw(context);


    };

	// start it (click run button to start this demo)
    start();
    

}());

            </textarea>
            <iframe id="quick_iframe" width="320" height="240"></iframe>
            <br>
            <input id="quick_run" type="button" value="run">
            <input id="quick_kill" type="button" value="kill">
            <input id="quick_post" type="submit" value="post">
        </div>


<!-- the old client system

	<label>Say:</label>
	<input id="wall_say" type="text" name="say"/>
        <input id="wall_post" type="submit" value="post">
	<br>       

--> 
        <%- html_wall_content %>
    </div>
</div>

<!-- the post client system -->
<script src="/js/post_client.js"></script>

<!--
<script>

    // yes we will want to do this client side as well some time
    var getPosts = function(){


    }


    // send a wall post
    var send = function(data){
        var xhr = new XMLHttpRequest();
        xhr.open('POST', '');
        xhr.setRequestHeader('wallpost', JSON.stringify(data));

        xhr.onreadystatechange = function(){

            if(this.readyState === 4){

                document.getElementById('query').innerHTML = this.response;
                console.log(this.response);
        
            }

        };

        xhr.send();

    };

    // attach event for wall_post button
    document.getElementById('wall_post').addEventListener('click', function(){

        send({say:document.getElementById('wall_say').value});

    });

</script>
-->